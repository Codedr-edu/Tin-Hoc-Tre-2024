# Generated by Django 5.1.3 on 2024-11-24 12:54

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='bad_keyword',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keyword', models.TextField()),
                ('status', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Education_rank',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='GPTeen_doc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('doc', models.FileField(upload_to='files/gpteen/')),
            ],
        ),
        migrations.CreateModel(
            name='GPTeen_University_doc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('doc', models.FileField(upload_to='files/university/')),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='Bio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('facebook', models.CharField(blank=True, max_length=1000, null=True)),
                ('instagram', models.CharField(blank=True, max_length=1000, null=True)),
                ('twitter', models.CharField(blank=True, max_length=1000, null=True)),
                ('zalo', models.CharField(blank=True, max_length=1000, null=True)),
                ('grade', models.IntegerField(blank=True, null=True)),
                ('balance', models.FloatField()),
                ('wallet_passcode', models.TextField()),
                ('deleted', models.IntegerField()),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='bio_user', to=settings.AUTH_USER_MODEL)),
                ('edu_rank', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_edu_rank', to='social_learning.education_rank')),
            ],
        ),
        migrations.CreateModel(
            name='club',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('description', models.TextField()),
                ('video', models.FileField(upload_to='club/video/')),
                ('time', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(max_length=1000)),
                ('skill', models.TextField()),
                ('dislike', models.ManyToManyField(related_name='club_dislike', to='social_learning.bio')),
                ('down', models.ManyToManyField(related_name='club_down', to='social_learning.bio')),
                ('like', models.ManyToManyField(related_name='club_like', to='social_learning.bio')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='club_creator_related', to='social_learning.bio')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='club_subject_related', to='social_learning.subject')),
            ],
        ),
        migrations.CreateModel(
            name='club_comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('status', models.CharField(max_length=1000)),
                ('club', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='club_comment_related', to='social_learning.club')),
                ('down', models.ManyToManyField(related_name='club_comment_down', to='social_learning.bio')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_club_comment_related', to='social_learning.bio')),
            ],
        ),
        migrations.CreateModel(
            name='club_image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='club/image/')),
                ('club', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='club_image_related', to='social_learning.club')),
            ],
        ),
        migrations.CreateModel(
            name='club_role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(max_length=1000)),
                ('club', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='club_role', to='social_learning.club')),
            ],
        ),
        migrations.CreateModel(
            name='club_member',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('contact', models.TextField()),
                ('status', models.CharField(max_length=1000)),
                ('club', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='club_member_related', to='social_learning.club')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='club_member_account', to='social_learning.bio')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='club_member_role_related', to='social_learning.club_role')),
            ],
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=1000)),
                ('description', models.TextField()),
                ('grade', models.IntegerField()),
                ('price', models.FloatField()),
                ('file', models.FileField(upload_to='files/documents/')),
                ('image', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('datetime', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(max_length=1000)),
                ('comment_counter', models.IntegerField()),
                ('dislike', models.ManyToManyField(related_name='document_dislike', to='social_learning.bio')),
                ('down', models.ManyToManyField(related_name='document_down', to='social_learning.bio')),
                ('like', models.ManyToManyField(related_name='document_like', to='social_learning.bio')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Document_auth', to='social_learning.bio')),
                ('edu_rank', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='doc_edu_rank', to='social_learning.education_rank')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='document_subject', to='social_learning.subject')),
            ],
        ),
        migrations.CreateModel(
            name='Comment_Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('status', models.CharField(max_length=1000)),
                ('down', models.ManyToManyField(related_name='comment_document_down', to='social_learning.bio')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comment_document_user', to='social_learning.bio')),
                ('post', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cmt_document', to='social_learning.document')),
            ],
        ),
        migrations.CreateModel(
            name='have_buy_document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='document_check', to='social_learning.document')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Document_buyer', to='social_learning.bio')),
            ],
        ),
        migrations.CreateModel(
            name='hornorable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('goal', models.IntegerField()),
                ('content', models.TextField()),
                ('status', models.TextField()),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='honorable_related', to='social_learning.bio')),
            ],
        ),
        migrations.CreateModel(
            name='online_class',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('description', models.TextField()),
                ('grade', models.IntegerField()),
                ('platform', models.TextField()),
                ('link', models.TextField()),
                ('price', models.FloatField()),
                ('image', models.ImageField(upload_to='online_class/image')),
                ('status', models.CharField(max_length=1000)),
                ('time', models.DateTimeField(auto_now_add=True)),
                ('dislike', models.ManyToManyField(related_name='online_class_dislike', to='social_learning.bio')),
                ('down', models.ManyToManyField(related_name='online_class_down', to='social_learning.bio')),
                ('like', models.ManyToManyField(related_name='online_class_like', to='social_learning.bio')),
                ('online_class_edu_rank', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='social_learning.education_rank')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teacher_related', to='social_learning.bio')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subject_online_class_related', to='social_learning.subject')),
            ],
        ),
        migrations.CreateModel(
            name='homework_online_class',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('content', models.TextField()),
                ('file', models.FileField(upload_to='online_class/homework/')),
                ('online_class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='online_class_homework', to='social_learning.online_class')),
            ],
        ),
        migrations.CreateModel(
            name='online_class_buyer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('online_class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='online_class_buyer', to='social_learning.online_class')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='online_class_buyer_user', to='social_learning.bio')),
            ],
        ),
        migrations.CreateModel(
            name='online_class_comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('status', models.CharField(max_length=1000)),
                ('time', models.DateTimeField(auto_now_add=True)),
                ('down', models.ManyToManyField(related_name='online_class_comment_down', to='social_learning.bio')),
                ('online_class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='online_class_comment_related', to='social_learning.online_class')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='online_class_comment_user_related', to='social_learning.bio')),
            ],
        ),
        migrations.CreateModel(
            name='online_class_homework_submit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='online_class/homework/done/')),
                ('teacher_review', models.TextField()),
                ('homework', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='online_class_homework_related', to='social_learning.homework_online_class')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='online_class_homework_submit_user_related', to='social_learning.bio')),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=1000)),
                ('image', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('status', models.CharField(max_length=1000)),
                ('datetime', models.DateTimeField(auto_now_add=True)),
                ('comment_counter', models.IntegerField()),
                ('dislike', models.ManyToManyField(related_name='post_dislike_related', to='social_learning.bio')),
                ('down', models.ManyToManyField(related_name='post_down', to='social_learning.bio')),
                ('like', models.ManyToManyField(related_name='post_like_related', to='social_learning.bio')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='post_auth_related', to='social_learning.bio')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='post_subject', to='social_learning.subject')),
            ],
        ),
        migrations.CreateModel(
            name='Comment_Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('status', models.CharField(max_length=1000)),
                ('down', models.ManyToManyField(related_name='comment_post_down', to='social_learning.bio')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comment_post_user_related', to='social_learning.bio')),
                ('post', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comment_post_related', to='social_learning.post')),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('file', models.FileField(upload_to='files/questions/')),
                ('grade', models.IntegerField()),
                ('price', models.FloatField()),
                ('answered', models.IntegerField()),
                ('status', models.CharField(max_length=1000)),
                ('datetime', models.DateTimeField(auto_now_add=True)),
                ('comment_counter', models.IntegerField()),
                ('dislike', models.ManyToManyField(related_name='question_dislike', to='social_learning.bio')),
                ('down', models.ManyToManyField(related_name='question_down', to='social_learning.bio')),
                ('education_rank', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Education_rank_question', to='social_learning.education_rank')),
                ('like', models.ManyToManyField(related_name='question_like', to='social_learning.bio')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='question_user', to='social_learning.bio')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subject', to='social_learning.subject')),
            ],
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('file', models.FileField(upload_to='files/answers/')),
                ('choosen', models.IntegerField()),
                ('status', models.CharField(max_length=1000)),
                ('datetime', models.DateTimeField(auto_now_add=True)),
                ('dislike', models.ManyToManyField(related_name='answer_dislike', to='social_learning.bio')),
                ('down', models.ManyToManyField(related_name='answer_down', to='social_learning.bio')),
                ('like', models.ManyToManyField(related_name='answer_like', to='social_learning.bio')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='question_user_answer', to='social_learning.bio')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ques_select', to='social_learning.question')),
            ],
        ),
        migrations.CreateModel(
            name='Quiz',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('description', models.TextField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('grade', models.IntegerField()),
                ('number_of_question', models.IntegerField()),
                ('edu_rank', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quiz_edu_rank', to='social_learning.education_rank')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_auth', to='social_learning.bio')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quiz_subject', to='social_learning.subject')),
            ],
        ),
        migrations.CreateModel(
            name='Quiz_questions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField()),
                ('name', models.TextField()),
                ('a', models.TextField()),
                ('b', models.TextField()),
                ('c', models.TextField()),
                ('d', models.TextField()),
                ('correct', models.TextField()),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='question_quiz', to='social_learning.quiz')),
            ],
        ),
    ]
